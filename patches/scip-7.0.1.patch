diff --color -uarN /tmp/scip-7.0.1/CMakeLists.txt ./CMakeLists.txt
--- /tmp/scip-7.0.1/CMakeLists.txt	2020-06-23 10:40:49.000000000 +0200
+++ ./CMakeLists.txt	2020-07-02 23:15:54.903073615 +0200
@@ -1,5 +1,10 @@
 cmake_minimum_required(VERSION 3.3)
 
+# option() honors normal variables.
+if(POLICY CMP0077)
+  cmake_policy(SET CMP0077 NEW)
+endif()
+
 set(CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_DEBUG} ${CMAKE_C_FLAGS_RELEASE}")
 set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_DEBUG} ${CMAKE_CXX_FLAGS_RELEASE}")
 
@@ -220,15 +225,17 @@
 set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)
 
 # ZLIB
-if(ZLIB)
+if(ZLIB AND NOT TARGET ZLIB::ZLIB)
     find_package(ZLIB)
 endif()
-if(ZLIB_FOUND)
+if(ZLIB_FOUND OR TARGET ZLIB::ZLIB)
     include_directories(${ZLIB_INCLUDE_DIRS})
-    set(SCIP_WITH_ZLIB on)
+    set(SCIP_WITH_ZLIB ON)
 else()
+    set(SCIP_WITH_ZLIB OFF)
     set(ZLIB_LIBRARIES "")
 endif()
+message(STATUS "ZLIB: ${SCIP_WITH_ZLIB}")
 
 # Readline
 if(READLINE)
@@ -236,10 +243,12 @@
 endif()
 if(READLINE_FOUND)
     include_directories(${Readline_INCLUDE_DIRS})
-    set(SCIP_WITH_READLINE on)
+    set(SCIP_WITH_READLINE ON)
 else()
     set(Readline_LIBRARY "")
+    set(SCIP_WITH_READLINE OFF)
 endif()
+message(STATUS "READLINE: ${SCIP_WITH_READLINE}")
 
 # GMP
 if(GMP)
@@ -247,22 +256,27 @@
 endif()
 if(GMP_FOUND)
     include_directories(${GMP_INCLUDE_DIRS})
-    set(SCIP_WITH_GMP on)
+    set(SCIP_WITH_GMP ON)
 else()
     set(GMP_LIBRARIES "")
+    set(SCIP_WITH_GMP OFF)
 endif()
+message(STATUS "GMP: ${SCIP_WITH_GMP}")
 
 # look for presolvelib
 if(PAPILO)
    find_package(PAPILO CONFIG)
 endif()
 if(PAPILO_FOUND)
-   set(SCIP_WITH_PAPILO on)
+   set(SCIP_WITH_PAPILO ON)
 else()
    set(PAPILO_IMPORTED_TARGETS "")
+   set(SCIP_WITH_PAPILO OFF)
 endif()
+message(STATUS "PAPILO: ${SCIP_WITH_PAPILO}")
 
 #search the selected LP solver library
+message(STATUS "LPS: ${LPS}")
 if(LPS STREQUAL "spx")
     find_package(SOPLEX REQUIRED CONFIG)
     if(LPSCHECK)
@@ -290,6 +304,7 @@
 else()
     message(FATAL_ERROR "option LPS has wrong value")
 endif()
+message(STATUS "LPS: ${LPS}")
 
 #setup the proper lpi file for the selected LP solver
 if(SOPLEX_FOUND)
@@ -307,6 +322,7 @@
         set(lpi lpi/lpi_spx2.cpp)
     endif()
 endif()
+message(STATUS "SOPLEX: ${SOPLEX_FOUND}")
 
 if(CLP_FOUND)
     include_directories(${CLP_INCLUDE_DIRS})
@@ -314,6 +330,7 @@
     set(LPS_LIBRARIES ${CLP_LIBRARIES})
     set(LPS_PIC_LIBRARIES ${LPS_LIBRARIES})
 endif()
+message(STATUS "CLP: ${CLP_FOUND}")
 
 if(CPLEX_FOUND)
     include_directories(${CPLEX_INCLUDE_DIRS})
@@ -324,6 +341,7 @@
     set(LPS_LIBRARIES ${LPS_LIBRARIES} ${CPLEX_LIBRARIES})
     set(LPS_PIC_LIBRARIES ${LPS_PIC_LIBRARIES} ${LPS_LIBRARIES})
 endif()
+message(STATUS "CPLEX: ${CPLEX_FOUND}")
 
 if(GLOP_FOUND)
     include_directories(${GLOP_INCLUDE_DIRS})
@@ -331,6 +349,7 @@
     set(LPS_LIBRARIES ${GLOP_LIBRARIES})
     set(LPS_PIC_LIBRARIES ${LPS_LIBRARIES})
 endif()
+message(STATUS "GLOP: ${GLOP_FOUND}")
 
 if(GUROBI_FOUND)
     include_directories(${GUROBI_INCLUDE_DIRS})
@@ -338,6 +357,7 @@
     set(LPS_LIBRARIES ${GUROBI_LIBRARIES})
     set(LPS_PIC_LIBRARIES ${LPS_LIBRARIES})
 endif()
+message(STATUS "GUROBI: ${GUROBI_FOUND}")
 
 if(XPRESS_FOUND)
     include_directories(${XPRESS_INCLUDE_DIRS})
@@ -345,6 +365,7 @@
     set(LPS_LIBRARIES ${XPRESS_LIBRARIES})
     set(LPS_PIC_LIBRARIES ${LPS_LIBRARIES})
 endif()
+message(STATUS "XPRESS: ${XPRESS_FOUND}")
 
 if(MOSEK_FOUND)
     include_directories(${MOSEK_INCLUDE_DIRS})
@@ -352,6 +373,7 @@
     set(LPS_LIBRARIES ${MOSEK_LIBRARIES})
     set(LPS_PIC_LIBRARIES ${LPS_LIBRARIES})
 endif()
+message(STATUS "MOSEK: ${MOSEK_FOUND}")
 
 if(QSO_FOUND)
     include_directories(${QSO_INCLUDE_DIRS})
@@ -359,6 +381,7 @@
     set(LPS_LIBRARIES ${QSO_LIBRARIES})
     set(LPS_PIC_LIBRARIES ${LPS_LIBRARIES})
 endif()
+message(STATUS "QSO: ${QSO_FOUND}")
 
 #search the selected symmetry computation program
 if(SYM STREQUAL "bliss")
@@ -377,6 +400,7 @@
 else()
     message(FATAL_ERROR "option SYM has wrong value")
 endif()
+message(STATUS "SYM: ${SYM}")
 
 
 
@@ -412,7 +436,7 @@
     find_package(ZIMPL CONFIG)
 endif()
 if(ZIMPL_FOUND)
-    set(SCIP_WITH_ZIMPL on)
+    set(SCIP_WITH_ZIMPL ON)
     include_directories(${ZIMPL_INCLUDE_DIRS})
     if(NOT SHARED)
         set(ZIMPL_PIC_LIBRARIES ${ZIMPL_LIBRARIES})
@@ -420,7 +444,9 @@
 else()
     set(ZIMPL_LIBRARIES "")
     set(ZIMPL_PIC_LIBRARIES "")
+    set(SCIP_WITH_ZIMPL OFF)
 endif()
+message(STATUS "ZIMPL: ${SCIP_WITH_ZIMPL}")
 
 # IPOPT
 if(IPOPT)
@@ -435,6 +461,7 @@
 else()
     set(nlpi nlpi/nlpi_ipopt_dummy.c)
 endif()
+message(STATUS "IPOPT: ${IPOPT_FOUND}")
 
 # WORHP
 if(WORHP)
diff --color -uarN /tmp/scip-7.0.1/src/CMakeLists.txt ./src/CMakeLists.txt
--- /tmp/scip-7.0.1/src/CMakeLists.txt	2020-06-23 10:40:53.000000000 +0200
+++ ./src/CMakeLists.txt	2020-07-03 14:22:08.669349298 +0200
@@ -953,6 +953,7 @@
 setLibProperties(liblpi "lpi")
 
 add_library(libscip ${scipsources} ${objscipsources} ${nlpisources} ${lpisources} ${tpisources} ${symsources})
+
 if(MSVC)
    # msvc otherwise is not smart enough and tries to link the scip.exe binary as a library
    setLibProperties(libscip "libscip")
@@ -960,6 +961,9 @@
    setLibProperties(libscip "scip")
 endif()
 
+target_include_directories(libscip INTERFACE
+    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
+    $<INSTALL_INTERFACE:include>)
 target_link_libraries(libscip PRIVATE
     ${ZLIB_LIBRARIES}
     ${Readline_LIBRARY}
